package com;
import java.util.LinkedList;
public class StopWordList
{
	//an array to hold all stop words
	static LinkedList<String> sw = new LinkedList<String>();
public static void wordList(){
	sw.clear();
	sw.add("date");
	sw.add("text");
	sw.add("html");
	sw.add("version");
	sw.add("server");
	sw.add("content");
	sw.add("type");
	sw.add("length");
	sw.add("last");
	sw.add("modified");
	sw.add("gmt");
	sw.add("cern");
	sw.add("mime");
	sw.add("can");
	sw.add("for");
	sw.add("as");
	sw.add("at");
	sw.add("and");
	sw.add("be");
	sw.add("co");
	sw.add("not");
	sw.add("this");
	sw.add("the");
	sw.add("is");
	sw.add("those");
	sw.add("that");
	sw.add("these");
	sw.add("what");
	sw.add("why");
	sw.add("whome");
	sw.add("whose");
	sw.add("who");
	sw.add("are");
	sw.add("do");
	sw.add("will");
	sw.add("this");
	sw.add("its");
	sw.add("it");
	sw.add("on");
	sw.add("in");
	sw.add("of");
	sw.add("reuter");
	sw.add("off");
	sw.add("was");
	sw.add("were");
	sw.add("where");
	sw.add("with");
	sw.add("to");
	sw.add("a");
	sw.add("an");
	sw.add("she");
	sw.add("he");
	sw.add("has");
	sw.add("his");
	sw.add("him");
	sw.add("they");
	sw.add("said");
	sw.add("both");
	sw.add("by");
	sw.add("com");
	sw.add("you");
	sw.add("me");
	sw.add("ll");
	sw.add("but");
	sw.add("most");
	sw.add("have");
	sw.add("has");
	sw.add("had");
	sw.add("so");
	sw.add("you");
	sw.add("don");
	sw.add("having");
	sw.add("very");
	sw.add("full");
	sw.add("ever");
	sw.add("so");
	sw.add("sw");
	sw.add("helps");
	sw.add("help");
	sw.add("like");
	sw.add("i");
	sw.add("am");
	sw.add("about");
	sw.add("may");
	sw.add("mean");
	sw.add("meaning");
	sw.add("than");
	sw.add("from");
	sw.add("any");
	sw.add("always");
	sw.add("no");
	sw.add("yes");
	sw.add("well");
	sw.add("my");
	sw.add("t");
	sw.add("how");
	sw.add("didn");
	sw.add("did");
	sw.add("ve");
	sw.add("you");
	sw.add("keep");
	sw.add("your");
	sw.add("while");
	sw.add("out");
	sw.add("up");
	sw.add("down");
	sw.add("back");
	sw.add("does");
	sw.add("s");
	sw.add("become");
	sw.add("there");
	sw.add("our");
	sw.add("whole");
	sw.add("all");
	sw.add("being");
	sw.add("too");
	sw.add("also");
	sw.add("able");
	sw.add("we");
	sw.add("over");
	sw.add("use");
	sw.add("want");
	sw.add("or");
	sw.add("now");
	sw.add("using");
	sw.add("used");
	sw.add("otherwise");
	sw.add("just");
	sw.add("know");
	sw.add("known");
	sw.add("once");
	sw.add("see");
	sw.add("seen");
	sw.add("choose");
	sw.add("alone");
	sw.add("though");
	sw.add("get");
	sw.add("chose");
	sw.add("com");
	sw.add("from");
	sw.add("message");
	sw.add("id");
	sw.add("i");
	sw.add("d");
	sw.add("date");
	sw.add("Reply");
	sw.add("subject");
	sw.add("path");
	sw.add("organization");
	sw.add("id");
	sw.add("sender");
	sw.add("newsgroups");
	sw.add("lines");
}
//return true if array contains sw word
public static boolean check(String word){
	return sw.contains(word.trim());
}
}